{"version":3,"sources":["webpack:///src/views/pages/action/token/index.vue","webpack:///./src/views/pages/action/token/index.vue?5956","webpack:///./src/views/pages/action/token/index.vue"],"names":["action_token","render","this","$createElement","_self","_c","_m","staticRenderFns","_vm","_h","attrs","id","staticClass","_v","Component","__webpack_require__","normalizeComponent","name","data","methods","mounted","ssrContext","__webpack_exports__"],"mappings":"sGAuEA,ICpEAA,GADiBC,OAFjB,WAA0BC,KAAaC,eAAbD,KAAuCE,MAAAC,GAAwB,OAA/DH,KAA+DI,GAAA,IAExEC,iBADjB,WAAoC,IAAAC,EAAAN,KAAaO,EAAAD,EAAAL,eAA0BE,EAAAG,EAAAJ,MAAAC,IAAAI,EAAwB,OAAAJ,EAAA,OAAiBK,OAAOC,GAAA,gBAAmBN,EAAA,OAAYO,YAAA,YAAsBP,EAAA,OAAYO,YAAA,UAAoBJ,EAAAK,GAAA,aAAAL,EAAAK,GAAA,KAAAR,EAAA,OAA4CO,YAAA,SAAmBJ,EAAAK,GAAA,KAAAR,EAAA,OAAwBO,YAAA,YAAsBP,EAAA,OAAAG,EAAAK,GAAA,+LAAAL,EAAAK,GAAA,KAAAR,EAAA,OAAwOO,YAAA,eAAyBJ,EAAAK,GAAA,WAAAL,EAAAK,GAAA,KAAAR,EAAA,OAA0CO,YAAA,OAAiBP,EAAA,OAAAA,EAAA,QAAAG,EAAAK,GAAA,utBAA4uBL,EAAAK,GAAA,KAAAR,EAAA,OAA+BO,YAAA,OAAiBP,EAAA,OAAAA,EAAA,QAAAG,EAAAK,GAAA,ymBCEr5C,IAcAC,EAdAC,EAAA,OAcAC,EFuDAC,KAAA,aACAC,KAFA,WAGA,UAEAC,WACAC,QANA,cEpDApB,GATA,EAVA,SAAAqB,GACAN,EAAA,SAaA,kBAEA,MAUAO,EAAA,QAAAR,EAAA","file":"static/js/14.cd0f7f94d76caaf59317.js","sourcesContent":["<template>\r\n\t<div id=\"tokencheck\">\r\n\t\t<div class=\"bground\">\r\n\t\t\t<div class=\"title\">token验证</div>\r\n\t\t\t<div class=\"line\"></div>\r\n\t\t\t<div class=\"content\">\r\n\t\t\t\t<div>token验证，首次登录时从服务端中获取，主要应用于检测用户打开某页面时是否已经登录或是否有权限请求服务，当未登录或无权限时，则返回登录界面或提示相应语句。获取token值后一般存储于本地缓存中，有一定的时效性，每次访问服务端时，会附带在请求链接的Headers中一并传输。本框架token处理相关代码封装在src/assets/js/middleware.js文件中。</div>\r\n\t\t\t\t<div class=\"code-title\">核心代码：</div>\r\n\t\t\t\t<div class=\"md\">\r\n\t\t\t\t\t<pre><code>// 添加一个请求拦截器\r\n\taxios.interceptors.request.use(\r\n\t\tfunction(config) {\r\n\t\t\t// 判断localStorage中是否存在api_token\r\n\t\t\tlet apiToken = '';\r\n\t\t\ttry {\r\n\t\t\t\tlet token = store.state.app.apiToken; //检测app模块状态栏是否有token\r\n\t\t\t\tif(token) {\r\n\t\t\t\t\tapiToken = token;\r\n\t\t\t\t} else if(getLocalStorage('api_token')) {\r\n\t\t\t\t\tapiToken = getLocalStorage('api_token'); // 从本地缓存中获取token，若无则为空\r\n\t\t\t\t\tstore.commit('API_TOKEN', apiToken); //发送推送，将此token添加到状态值中\r\n\t\t\t\t}\r\n\t\t\t} catch(e) {}\r\n\t\t\tif(apiToken) {\r\n\t\t\t\tconfig.headers['API-TOKEN'] = `${apiToken}`; //  存在将api_token写入 request header\r\n\t\t\t}\r\n\t\t\treturn config;\r\n\t\t},\r\n\t\tfunction(error) {\r\n\t\t\treturn Promise.reject(error);\r\n\t\t}\r\n\t);</code></pre>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"md\">\r\n\t\t\t\t\t<pre><code>/**\r\n * router 路由\r\n * store 状态管理\r\n * */\r\nexport const SetRouterTransition = function(router, store) {\r\n\t/* 页面跳转前 */\r\n\trouter.beforeEach((to, from, next) => {\r\n\t\tif(to.meta.needToken) {\r\n\t\t\tif(store.state.app.apiToken || getLocalStorage('api_token')) {\r\n\t\t\t\tnext();\r\n\t\t\t} else {\r\n\t\t\t\t// 若无token值直接返回登录页\r\n\t\t\t\tnext({\r\n\t\t\t\t\tpath: '/',\r\n\t\t\t\t\tquery: {\r\n\t\t\t\t\t\tredirect: to.fullPath\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnext();\r\n\t\t}\r\n\t});\r\n\r\n\t/* 页面跳转后 */\r\n\trouter.afterEach((transition) => {\r\n\t\tlet title = transition.meta.pageTitle;\r\n\t});\r\n}</code></pre>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tname: 'tokencheck',\r\n\t\tdata() {\r\n\t\t\treturn {}\r\n\t\t},\r\n\t\tmethods: {},\r\n\t\tmounted() {}\r\n\t}\r\n</script>\r\n\r\n<style lang=\"stylus\" rel=\"stylesheet/stylus\" scoped>\r\n\t#tokencheck {\r\n\t\tpadding: 30px;\r\n\t}\r\n\t\r\n\t.code-title {\r\n\t\tmargin-top: 10px;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\t\r\n\t.md {\r\n\t\tcolor: white;\r\n\t\tbackground-color: black;\r\n\t\tpadding: 10px;\r\n\t\tmargin-top: 10px;\r\n\t\tborder-radius: 3px;\r\n\t\tfont-size: 16px;\r\n\t\twidth: 1000px;\r\n\t}\r\n\t\r\n\t.bground {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 500px;\r\n\t\tbackground-color: #fff;\r\n\t\tborder-radius: 5px;\r\n\t\t.title {\r\n\t\t\tfont-size: 36px;\r\n\t\t}\r\n\t\t.line {\r\n\t\t\tmargin-top: 20px;\r\n\t\t\tborder-bottom: solid 1px #E4E4E4;\r\n\t\t}\r\n\t\t.content {\r\n\t\t\tmargin-top: 10px;\r\n\t\t}\r\n\t}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/views/pages/action/token/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"tokencheck\"}},[_c('div',{staticClass:\"bground\"},[_c('div',{staticClass:\"title\"},[_vm._v(\"token验证\")]),_vm._v(\" \"),_c('div',{staticClass:\"line\"}),_vm._v(\" \"),_c('div',{staticClass:\"content\"},[_c('div',[_vm._v(\"token验证，首次登录时从服务端中获取，主要应用于检测用户打开某页面时是否已经登录或是否有权限请求服务，当未登录或无权限时，则返回登录界面或提示相应语句。获取token值后一般存储于本地缓存中，有一定的时效性，每次访问服务端时，会附带在请求链接的Headers中一并传输。本框架token处理相关代码封装在src/assets/js/middleware.js文件中。\")]),_vm._v(\" \"),_c('div',{staticClass:\"code-title\"},[_vm._v(\"核心代码：\")]),_vm._v(\" \"),_c('div',{staticClass:\"md\"},[_c('pre',[_c('code',[_vm._v(\"// 添加一个请求拦截器\\n\\taxios.interceptors.request.use(\\n\\t\\tfunction(config) {\\n\\t\\t\\t// 判断localStorage中是否存在api_token\\n\\t\\t\\tlet apiToken = '';\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tlet token = store.state.app.apiToken; //检测app模块状态栏是否有token\\n\\t\\t\\t\\tif(token) {\\n\\t\\t\\t\\t\\tapiToken = token;\\n\\t\\t\\t\\t} else if(getLocalStorage('api_token')) {\\n\\t\\t\\t\\t\\tapiToken = getLocalStorage('api_token'); // 从本地缓存中获取token，若无则为空\\n\\t\\t\\t\\t\\tstore.commit('API_TOKEN', apiToken); //发送推送，将此token添加到状态值中\\n\\t\\t\\t\\t}\\n\\t\\t\\t} catch(e) {}\\n\\t\\t\\tif(apiToken) {\\n\\t\\t\\t\\tconfig.headers['API-TOKEN'] = `${apiToken}`; //  存在将api_token写入 request header\\n\\t\\t\\t}\\n\\t\\t\\treturn config;\\n\\t\\t},\\n\\t\\tfunction(error) {\\n\\t\\t\\treturn Promise.reject(error);\\n\\t\\t}\\n\\t);\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"md\"},[_c('pre',[_c('code',[_vm._v(\"/**\\n * router 路由\\n * store 状态管理\\n * */\\nexport const SetRouterTransition = function(router, store) {\\n\\t/* 页面跳转前 */\\n\\trouter.beforeEach((to, from, next) => {\\n\\t\\tif(to.meta.needToken) {\\n\\t\\t\\tif(store.state.app.apiToken || getLocalStorage('api_token')) {\\n\\t\\t\\t\\tnext();\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t// 若无token值直接返回登录页\\n\\t\\t\\t\\tnext({\\n\\t\\t\\t\\t\\tpath: '/',\\n\\t\\t\\t\\t\\tquery: {\\n\\t\\t\\t\\t\\t\\tredirect: to.fullPath\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t})\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tnext();\\n\\t\\t}\\n\\t});\\n\\n\\t/* 页面跳转后 */\\n\\trouter.afterEach((transition) => {\\n\\t\\tlet title = transition.meta.pageTitle;\\n\\t});\\n}\")])])])])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-334de7e4\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/pages/action/token/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-334de7e4\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!stylus-loader?{\\\"sourceMap\\\":true}!../../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-334de7e4\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-334de7e4\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/pages/action/token/index.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}