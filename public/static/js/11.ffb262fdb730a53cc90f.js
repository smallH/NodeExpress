webpackJsonp([11],{XMEf:function(t,n){},wJzi:function(t,n,r){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var e={render:function(){var t=this,n=t.$createElement,r=t._self._c||n;return r("div",{attrs:{id:"http"}},[r("div",{staticClass:"bground"},[r("div",{staticClass:"title"},[t._v("http")]),t._v(" "),r("div",{staticClass:"line"}),t._v(" "),r("div",{staticClass:"content"},[r("div",[t._v("http模块基于axios模块和RESTful规范，模块封装了增删改查功能，主要实现了对后台api请求功能。http模块位于：root/src/assets/js/http.js：")]),t._v(" "),r("div",{staticClass:"code-title"}),t._v(" "),r("div",{staticClass:"md"},[r("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[r("code",{staticClass:"javascript"},[t._v("// http.js\n// commit('START_LOADING')和commit('FINISH_LOADING')为触发显示加载图标事件，若不需要可删除\nimport vue from 'vue';\nimport axios from 'axios';\n\n/**\n * get请求\n * @param  {String} options.url   api地址\n * @param  {String} options.query query参数\n * @return {Promise}              Promise对象\n */\nexport const _get = ({\n\turl,\n\tquery\n}, commit) => {\n\tif(commit) commit('START_LOADING');\n\treturn axios({\n\t\tmethod: 'get',\n\t\turl,\n\t\tparams: { ...query\n\t\t} // get 请求时带的参数\n\t}).then((res) => {\n\t\tif(commit) commit('FINISH_LOADING');\n\t\tif(res.status >= 200 && res.status < 300) {\n\t\t\treturn res.data\n\t\t}\n\t\treturn Promise.reject(res);\n\t}, (err) => {\n\t\tif(commit) commit('FINISH_LOADING');\n\t\t// 临时处理网关异常\n\t\tif(err && err.exception && err.exception.indexOf('ZuulException') !== -1) {\n\t\t\talert('服务器正忙，请稍后再试');\n\t\t}\n\t\treturn Promise.reject(err.message || err.data);\n\t});\n};\n\n/**\n * post请求\n * @param  {String} options.url   api地址\n * @param  {String} options.query query参数\n * @return {Promise}              Promise对象\n */\nexport const _post = ({\n\turl,\n\tbody\n}, commit) => {\n\tif(commit) commit('START_LOADING');\n\n\treturn axios({\n\t\tmethod: 'post',\n\t\turl,\n\t\tdata: { ...body\n\t\t} // post 请求时带的参数\n\t}).then((res) => {\n\t\tif(commit) commit('FINISH_LOADING');\n\t\tif(res.status >= 200 && res.status < 300) {\n\t\t\treturn res.data\n\t\t}\n\t\treturn Promise.reject(res);\n\t}, (err) => {\n\t\tif(commit) commit('FINISH_LOADING');\n\t\t// 临时处理网关异常\n\t\tif(err && err.exception && err.exception.indexOf('ZuulException') !== -1) {\n\t\t\talert('服务器正忙，请稍后再试');\n\t\t}\n\t\treturn Promise.reject(err.message || err.data);\n\t});\n};\n\n/**\n * delete请求\n * @param  {String} options.url   api地址\n * @param  {String} options.body body参数\n * @return {Promise}              Promise对象\n */\nexport const _delete = ({\n\turl,\n\tbody\n}, commit) => {\n\tif(commit) commit('START_LOADING');\n\n\treturn axios({\n\t\tmethod: 'delete',\n\t\turl,\n\t\tdata: { ...body\n\t\t} // delete 请求时带的参数\n\t}).then((res) => {\n\t\tif(commit) commit('FINISH_LOADING');\n\t\tif(res.status >= 200 && res.status < 300) {\n\t\t\treturn res.data\n\t\t}\n\t\treturn Promise.reject(res);\n\t}, (err) => {\n\t\tif(commit) commit('FINISH_LOADING');\n\t\t// 临时处理网关异常\n\t\tif(err && err.exception && err.exception.indexOf('ZuulException') !== -1) {\n\t\t\talert('服务器正忙，请稍后再试');\n\t\t}\n\t\treturn Promise.reject(err.message || err.data);\n\t});\n};\n\n/**\n * put请求\n * 当用于更新操作时，需传递包含sql记录的全部字段的对象，否则缺少的属性该字段将在数据库置空。\n * @param  {String} options.url   api地址\n * @param  {String} options.query query参数\n * @return {Promise}              Promise对象\n */\nexport const _put = ({\n\turl,\n\tbody\n}, commit) => {\n\tif(commit) commit('START_LOADING');\n\n\treturn axios({\n\t\tmethod: 'put',\n\t\turl,\n\t\tdata: { ...body\n\t\t} // put 请求时带的参数\n\t}).then((res) => {\n\t\tif(commit) commit('FINISH_LOADING');\n\t\tif(res.status >= 200 && res.status < 300) {\n\t\t\treturn res.data\n\t\t}\n\t\treturn Promise.reject(res);\n\t}, (err) => {\n\t\tif(commit) commit('FINISH_LOADING');\n\t\t// 临时处理网关异常\n\t\tif(err && err.exception && err.exception.indexOf('ZuulException') !== -1) {\n\t\t\talert('服务器正忙，请稍后再试');\n\t\t}\n\t\treturn Promise.reject(err.message || err.data);\n\t});\n};\n\n/**\n * patch请求\n * 当用于更新操作时，需传递包含sql记录的部分字段的对象且只更新该部分字段内容。\n * @param  {String} options.url   api地址\n * @param  {String} options.query query参数\n * @return {Promise}              Promise对象\n */\nexport const _patch = ({\n\turl,\n\tbody\n}, commit) => {\n\tif(commit) commit('START_LOADING');\n\n\treturn axios({\n\t\tmethod: 'patch',\n\t\turl,\n\t\tdata: { ...body\n\t\t} // put 请求时带的参数\n\t}).then((res) => {\n\t\tif(commit) commit('FINISH_LOADING');\n\t\tif(res.status >= 200 && res.status < 300) {\n\t\t\treturn res.data\n\t\t}\n\t\treturn Promise.reject(res);\n\t}, (err) => {\n\t\tif(commit) commit('FINISH_LOADING');\n\t\t// 临时处理网关异常\n\t\tif(err && err.exception && err.exception.indexOf('ZuulException') !== -1) {\n\t\t\talert('服务器正忙，请稍后再试');\n\t\t}\n\t\treturn Promise.reject(err.message || err.data);\n\t});\n};")])])]),t._v(" "),r("div",{staticClass:"code-title"},[t._v("使用http模块：")]),t._v(" "),r("div",{staticClass:"md"},[r("pre",{directives:[{name:"highlightjs",rawName:"v-highlightjs"}]},[r("code",{staticClass:"javascript"},[t._v('// 事件触发 Component\nlet param = {};\nthis.$store.dispatch("getJson", param).then((json) => {\n\tconsole.log(json);\n}, (error) => {\n\tconsole.log(error);\n});\n\n// 事件处理 root/src/vuex/modules/app/action.js \nimport { _get } from "@/assets/js/http";\n\nlet _prefix = ``; // 请求前缀\nexport const getJson = ({\n\tcommit\n}, query) => {\n\tconst url = `${_prefix}/mockGetJson`;\n\treturn _get({\n\t\t\turl,\n\t\t\tquery\n\t\t}, commit)\n\t\t.then(json => {\n\t\t\treturn Promise.resolve(json);\n\t\t})\n\t\t.catch(error => {\n\t\t\treturn Promise.reject(error);\n\t\t});\n};')])])])])])])},staticRenderFns:[]};var i=r("VU/8")({name:"http"},e,!1,function(t){r("XMEf")},"data-v-7b996a86",null);n.default=i.exports}});
//# sourceMappingURL=11.ffb262fdb730a53cc90f.js.map