webpackJsonp([16],{"SD+G":function(t,s,e){"use strict";Object.defineProperty(s,"__esModule",{value:!0});var o={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{attrs:{id:"jsonserver"}},[e("div",{staticClass:"bground"},[e("div",{staticClass:"title"},[t._v("json-server")]),t._v(" "),e("div",{staticClass:"line"}),t._v(" "),e("div",{staticClass:"content"},[e("div",[t._v("json-server可以直接把一个json文件或模拟生成一组json数据托管成一个具备全RESTful风格的API，并支持跨域、jsonp、路由订制、数据快照保存等功能的 web 服务器，主要用途为：模拟前端json数据来源。在本框架根目录mock文件夹中，已配置了一个mockGetJson测试接口。要使用json-server需要在package.json中配置启动项：")]),t._v(" "),e("div",{staticClass:"code-title"},[t._v("package.json中配置用例：")]),t._v(" "),e("div",{staticClass:"md"},[e("pre",[e("code",[t._v('"mock": "nodemon --watch mock --exec json-server mock/db.js --routes mock/router/routes.json --host 127.17.5.117 --port 3000"')])])]),t._v(" "),e("div",{staticClass:"code-title"},[t._v("启动命令：")]),t._v(" "),e("div",{staticClass:"md"},[e("pre",[e("code",[t._v("$ npm run mock")])])]),t._v(" "),e("div",{staticClass:"code-title"},[t._v("获得一个http的json数据来源：")]),t._v(" "),e("div",{staticClass:"md"},[e("pre",[e("code",[t._v("http://127.17.5.117:3000/mockGetJson")])])])])])])}]};var n=e("VU/8")({name:"jsonserver",data:function(){return{}},methods:{},mounted:function(){}},o,!1,function(t){e("SWyc")},"data-v-31215665",null);s.default=n.exports},SWyc:function(t,s){}});
//# sourceMappingURL=16.11bcc0b23ae738ed99ca.js.map