webpackJsonp([14],{PlOe:function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var o={render:function(){this.$createElement;this._self._c;return this._m(0)},staticRenderFns:[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{attrs:{id:"tokencheck"}},[n("div",{staticClass:"bground"},[n("div",{staticClass:"title"},[t._v("token验证")]),t._v(" "),n("div",{staticClass:"line"}),t._v(" "),n("div",{staticClass:"content"},[n("div",[t._v("token验证，首次登录时从服务端中获取，主要应用于检测用户打开某页面时是否已经登录或是否有权限请求服务，当未登录或无权限时，则返回登录界面或提示相应语句。获取token值后一般存储于本地缓存中，有一定的时效性，每次访问服务端时，会附带在请求链接的Headers中一并传输。本框架token处理相关代码封装在src/assets/js/middleware.js文件中。")]),t._v(" "),n("div",{staticClass:"code-title"},[t._v("核心代码：")]),t._v(" "),n("div",{staticClass:"md"},[n("pre",[n("code",[t._v("// 添加一个请求拦截器\n\taxios.interceptors.request.use(\n\t\tfunction(config) {\n\t\t\t// 判断localStorage中是否存在api_token\n\t\t\tlet apiToken = '';\n\t\t\ttry {\n\t\t\t\tlet token = store.state.app.apiToken; //检测app模块状态栏是否有token\n\t\t\t\tif(token) {\n\t\t\t\t\tapiToken = token;\n\t\t\t\t} else if(getLocalStorage('api_token')) {\n\t\t\t\t\tapiToken = getLocalStorage('api_token'); // 从本地缓存中获取token，若无则为空\n\t\t\t\t\tstore.commit('API_TOKEN', apiToken); //发送推送，将此token添加到状态值中\n\t\t\t\t}\n\t\t\t} catch(e) {}\n\t\t\tif(apiToken) {\n\t\t\t\tconfig.headers['API-TOKEN'] = `${apiToken}`; //  存在将api_token写入 request header\n\t\t\t}\n\t\t\treturn config;\n\t\t},\n\t\tfunction(error) {\n\t\t\treturn Promise.reject(error);\n\t\t}\n\t);")])])]),t._v(" "),n("div",{staticClass:"md"},[n("pre",[n("code",[t._v("/**\n * router 路由\n * store 状态管理\n * */\nexport const SetRouterTransition = function(router, store) {\n\t/* 页面跳转前 */\n\trouter.beforeEach((to, from, next) => {\n\t\tif(to.meta.needToken) {\n\t\t\tif(store.state.app.apiToken || getLocalStorage('api_token')) {\n\t\t\t\tnext();\n\t\t\t} else {\n\t\t\t\t// 若无token值直接返回登录页\n\t\t\t\tnext({\n\t\t\t\t\tpath: '/',\n\t\t\t\t\tquery: {\n\t\t\t\t\t\tredirect: to.fullPath\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t} else {\n\t\t\tnext();\n\t\t}\n\t});\n\n\t/* 页面跳转后 */\n\trouter.afterEach((transition) => {\n\t\tlet title = transition.meta.pageTitle;\n\t});\n}")])])])])])])}]};var a=n("VU/8")({name:"tokencheck",data:function(){return{}},methods:{},mounted:function(){}},o,!1,function(t){n("ztM0")},"data-v-334de7e4",null);e.default=a.exports},ztM0:function(t,e){}});
//# sourceMappingURL=14.cd0f7f94d76caaf59317.js.map