{"version":3,"sources":["webpack:///src/views/pages/action/token/index.vue","webpack:///./src/views/pages/action/token/index.vue?11b0","webpack:///./src/views/pages/action/token/index.vue"],"names":["action_token","render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticClass","_v","directives","name","rawName","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"sGA2HA,ICxHeA,GADEC,OAFjB,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,OAAOC,GAAA,gBAAmBH,EAAA,OAAYI,YAAA,YAAsBJ,EAAA,OAAYI,YAAA,UAAoBR,EAAAS,GAAA,qBAAAT,EAAAS,GAAA,KAAAL,EAAA,OAAoDI,YAAA,SAAmBR,EAAAS,GAAA,KAAAL,EAAA,OAAwBI,YAAA,YAAsBJ,EAAA,OAAAJ,EAAAS,GAAA,6OAAAT,EAAAS,GAAA,KAAAL,EAAA,OAAsRI,YAAA,eAAyBR,EAAAS,GAAA,iCAAAT,EAAAS,GAAA,KAAAL,EAAA,OAAgEI,YAAA,OAAiBJ,EAAA,OAAYM,aAAaC,KAAA,cAAAC,QAAA,oBAA6CR,EAAA,QAAaI,YAAA,eAAyBR,EAAAS,GAAA,kyDAAkyDT,EAAAS,GAAA,KAAAL,EAAA,OAA+BI,YAAA,eAAyBR,EAAAS,GAAA,kCAAAT,EAAAS,GAAA,KAAAL,EAAA,OAAiEI,YAAA,OAAiBJ,EAAA,OAAYM,aAAaC,KAAA,cAAAC,QAAA,oBAA6CR,EAAA,QAAaI,YAAA,eAAyBR,EAAAS,GAAA,k4BAE9yFI,oBCCjB,IAcAC,EAdyBC,EAAQ,OAcjCC,EF2GAL,KAAA,cEzGEb,GATF,EAVA,SAAAmB,GACEF,EAAQ,SAaV,kBAEA,MAUeG,EAAA,QAAAJ,EAAiB","file":"static/js/11.33d6f434434c36c9b381.js","sourcesContent":["<template>\r\n\t<div id=\"tokencheck\">\r\n\t\t<div class=\"bground\">\r\n\t\t\t<div class=\"title\">axios配置与token验证</div>\r\n\t\t\t<div class=\"line\"></div>\r\n\t\t\t<div class=\"content\">\r\n\t\t\t\t<div>token验证，是指应用于检测用户打开某页面时是否已经登录或是否有权限打开的验证服务。当token验证失败时，返回登录界面或提示相应语句。获取token值后一般存储在本地缓存中，有一定的时效性，每次向服务端请求数据时，会配置在请求链接的Headers中，通过请求拦截添加，相关代码封装在框架的src/assets/js/middleware.js文件中。初始token可在登录时从服务端获取，通过store.commit('TOKEN', token)存储状态。</div>\r\n\t\t\t\t<div class=\"code-title\">axios配置核心代码：在网络请求时进行token验证</div>\r\n\t\t\t\t<div class=\"md\">\r\n\t\t\t\t\t<pre v-highlightjs><code class=\"javascript\">// middleware.js\r\nexport const SetAxiosConfig = function(router, store) {\r\n\tVue.prototype.$http = axios;\r\n\tlet _prefix = '';\r\n\r\n\tif(process.env.NODE_ENV == 'production') {\r\n\t\t_prefix = `${process.env.HOST}/api`\r\n\t} else {\r\n\t\t_prefix = '/api'\r\n\t}\r\n\r\n\taxios.defaults.baseURL = _prefix;\r\n\r\n\t// 请求拦截，在头部加入token\r\n\taxios.interceptors.request.use(\r\n\t\tfunction(config) {\r\n\t\t\tlet token = '';\r\n\t\t\ttoken = store.state.app.token;\r\n\t\t\tif(token) {\r\n\t\t\t\ttoken = token;\r\n\t\t\t} else if(getLocalStorage('token')) {\r\n\t\t\t\ttoken = getLocalStorage('token');\r\n\t\t\t\tstore.commit('TOKEN', token);\r\n\t\t\t}\r\n\t\t\tif(token) {\r\n\t\t\t\t// 存在将token写入请求头部\"TOKEN\"\r\n\t\t\t\tconfig.headers['TOKEN'] = `${token}`;\r\n\t\t\t}\r\n\t\t\treturn config;\r\n\t\t},\r\n\t\tfunction(error) {\r\n\t\t\treturn Promise.reject(error);\r\n\t\t}\r\n\t);\r\n\r\n\t// 请求结果\r\n\taxios.interceptors.response.use(function(response) {\r\n\t\treturn response;\r\n\t}, function(error) {\r\n\t\tif(error.response) {\r\n\t\t\tswitch(error.response.state) {\r\n\t\t\t\tcase 411:\r\n\t\t\t\t\t// 如411错误为没有token值\r\n\t\t\t\t\t// 返回处理状态和信息的Promise对象\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 412:\r\n\t\t\t\t\t// 如412错误为入参不正确\r\n\t\t\t\t\t// 返回处理状态和信息的Promise对象\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn Promise.reject(error.response.data)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\n// main.js\r\nimport {SetAxiosConfig} from '@/assets/js/middleware';\r\nimport router from './router';\r\nimport store from './vuex/store';\r\n\r\nSetAxiosConfig(router, store);\r\n\r\nlet path = \"http://127.0.0.1/api/mockGetJson\"; // 访问json-server模拟接口\r\naxios.get(path).then(function(resp) {\r\n\tconsole.log(resp);\r\n}).catch(error => {\r\n\tconsole.log(error);\r\n});</code></pre>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"code-title\">router配置核心代码：在路由跳转时进行token验证</div>\r\n\t\t\t\t<div class=\"md\">\r\n\t\t\t\t\t<pre v-highlightjs><code class=\"javascript\">// Router配置：路由跳转时token验证\r\nexport const SetRouterTransition = function(router, store) {\r\n\t/* router before */\r\n\trouter.beforeEach((to, from, next) => {\r\n\t\t// check this router need auth\r\n\t\tif(to.meta.requireAuth) {\r\n\t\t\tif(store.state.app.token || getLocalStorage('api_token')) {\r\n\t\t\t\tnext();\r\n\t\t\t} else {\r\n\t\t\t\tnext({\r\n\t\t\t\t\tpath: '/',\r\n\t\t\t\t\tquery: {\r\n\t\t\t\t\t\tredirect: to.fullPath\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tnext();\r\n\t\t}\r\n\t});\r\n\r\n\t/* router after */\r\n\trouter.afterEach((transition) => {\r\n\t\tlet title = transition.name;\r\n\t\tdocument.title = title;\r\n\t});\r\n}\r\n\t\t\t\t\t\r\n// main.js\r\nimport {SetRouterTransition} from '@/assets/js/middleware';\r\nimport router from './router';\r\nimport store from './vuex/store';\r\n\r\nSetRouterTransition(router, store);</code></pre>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tname: 'tokencheck',\r\n\t}\r\n</script>\r\n\r\n<style lang=\"stylus\" rel=\"stylesheet/stylus\" scoped>\r\n\t#tokencheck {\r\n\t\tpadding: 30px;\r\n\t}\r\n\t\r\n\t.code-title {\r\n\t\tmargin-top: 10px;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\t\r\n\t.md {\r\n\t\tmargin-top: 10px;\r\n\t\tfont-size: 16px;\r\n\t}\r\n\t\r\n\t.bground {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tmin-height: 500px;\r\n\t\tbackground-color: #fff;\r\n\t\tborder-radius: 5px;\r\n\t\t.title {\r\n\t\t\tfont-size: 36px;\r\n\t\t}\r\n\t\t.line {\r\n\t\t\tmargin-top: 20px;\r\n\t\t\tborder-bottom: solid 1px #E4E4E4;\r\n\t\t}\r\n\t\t.content {\r\n\t\t\tmargin-top: 10px;\r\n\t\t}\r\n\t}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/views/pages/action/token/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"tokencheck\"}},[_c('div',{staticClass:\"bground\"},[_c('div',{staticClass:\"title\"},[_vm._v(\"axios配置与token验证\")]),_vm._v(\" \"),_c('div',{staticClass:\"line\"}),_vm._v(\" \"),_c('div',{staticClass:\"content\"},[_c('div',[_vm._v(\"token验证，是指应用于检测用户打开某页面时是否已经登录或是否有权限打开的验证服务。当token验证失败时，返回登录界面或提示相应语句。获取token值后一般存储在本地缓存中，有一定的时效性，每次向服务端请求数据时，会配置在请求链接的Headers中，通过请求拦截添加，相关代码封装在框架的src/assets/js/middleware.js文件中。初始token可在登录时从服务端获取，通过store.commit('TOKEN', token)存储状态。\")]),_vm._v(\" \"),_c('div',{staticClass:\"code-title\"},[_vm._v(\"axios配置核心代码：在网络请求时进行token验证\")]),_vm._v(\" \"),_c('div',{staticClass:\"md\"},[_c('pre',{directives:[{name:\"highlightjs\",rawName:\"v-highlightjs\"}]},[_c('code',{staticClass:\"javascript\"},[_vm._v(\"// middleware.js\\r\\nexport const SetAxiosConfig = function(router, store) {\\r\\n\\tVue.prototype.$http = axios;\\r\\n\\tlet _prefix = '';\\r\\n\\r\\n\\tif(process.env.NODE_ENV == 'production') {\\r\\n\\t\\t_prefix = `${process.env.HOST}/api`\\r\\n\\t} else {\\r\\n\\t\\t_prefix = '/api'\\r\\n\\t}\\r\\n\\r\\n\\taxios.defaults.baseURL = _prefix;\\r\\n\\r\\n\\t// 请求拦截，在头部加入token\\r\\n\\taxios.interceptors.request.use(\\r\\n\\t\\tfunction(config) {\\r\\n\\t\\t\\tlet token = '';\\r\\n\\t\\t\\ttoken = store.state.app.token;\\r\\n\\t\\t\\tif(token) {\\r\\n\\t\\t\\t\\ttoken = token;\\r\\n\\t\\t\\t} else if(getLocalStorage('token')) {\\r\\n\\t\\t\\t\\ttoken = getLocalStorage('token');\\r\\n\\t\\t\\t\\tstore.commit('TOKEN', token);\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif(token) {\\r\\n\\t\\t\\t\\t// 存在将token写入请求头部\\\"TOKEN\\\"\\r\\n\\t\\t\\t\\tconfig.headers['TOKEN'] = `${token}`;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn config;\\r\\n\\t\\t},\\r\\n\\t\\tfunction(error) {\\r\\n\\t\\t\\treturn Promise.reject(error);\\r\\n\\t\\t}\\r\\n\\t);\\r\\n\\r\\n\\t// 请求结果\\r\\n\\taxios.interceptors.response.use(function(response) {\\r\\n\\t\\treturn response;\\r\\n\\t}, function(error) {\\r\\n\\t\\tif(error.response) {\\r\\n\\t\\t\\tswitch(error.response.state) {\\r\\n\\t\\t\\t\\tcase 411:\\r\\n\\t\\t\\t\\t\\t// 如411错误为没有token值\\r\\n\\t\\t\\t\\t\\t// 返回处理状态和信息的Promise对象\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\tcase 412:\\r\\n\\t\\t\\t\\t\\t// 如412错误为入参不正确\\r\\n\\t\\t\\t\\t\\t// 返回处理状态和信息的Promise对象\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\tdefault:\\r\\n\\t\\t\\t\\t\\treturn Promise.reject(error.response.data)\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t});\\r\\n}\\r\\n\\r\\n// main.js\\r\\nimport {SetAxiosConfig} from '@/assets/js/middleware';\\r\\nimport router from './router';\\r\\nimport store from './vuex/store';\\r\\n\\r\\nSetAxiosConfig(router, store);\\r\\n\\r\\nlet path = \\\"http://127.0.0.1/api/mockGetJson\\\"; // 访问json-server模拟接口\\r\\naxios.get(path).then(function(resp) {\\r\\n\\tconsole.log(resp);\\r\\n}).catch(error => {\\r\\n\\tconsole.log(error);\\r\\n});\")])])]),_vm._v(\" \"),_c('div',{staticClass:\"code-title\"},[_vm._v(\"router配置核心代码：在路由跳转时进行token验证\")]),_vm._v(\" \"),_c('div',{staticClass:\"md\"},[_c('pre',{directives:[{name:\"highlightjs\",rawName:\"v-highlightjs\"}]},[_c('code',{staticClass:\"javascript\"},[_vm._v(\"// Router配置：路由跳转时token验证\\r\\nexport const SetRouterTransition = function(router, store) {\\r\\n\\t/* router before */\\r\\n\\trouter.beforeEach((to, from, next) => {\\r\\n\\t\\t// check this router need auth\\r\\n\\t\\tif(to.meta.requireAuth) {\\r\\n\\t\\t\\tif(store.state.app.token || getLocalStorage('api_token')) {\\r\\n\\t\\t\\t\\tnext();\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tnext({\\r\\n\\t\\t\\t\\t\\tpath: '/',\\r\\n\\t\\t\\t\\t\\tquery: {\\r\\n\\t\\t\\t\\t\\t\\tredirect: to.fullPath\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t})\\r\\n\\t\\t\\t}\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tnext();\\r\\n\\t\\t}\\r\\n\\t});\\r\\n\\r\\n\\t/* router after */\\r\\n\\trouter.afterEach((transition) => {\\r\\n\\t\\tlet title = transition.name;\\r\\n\\t\\tdocument.title = title;\\r\\n\\t});\\r\\n}\\r\\n\\t\\t\\t\\t\\t\\r\\n// main.js\\r\\nimport {SetRouterTransition} from '@/assets/js/middleware';\\r\\nimport router from './router';\\r\\nimport store from './vuex/store';\\r\\n\\r\\nSetRouterTransition(router, store);\")])])])])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-c0d58934\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/views/pages/action/token/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-c0d58934\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!stylus-loader?{\\\"sourceMap\\\":true}!../../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-c0d58934\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-c0d58934\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/pages/action/token/index.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}